{"version":3,"sources":["MyLink.js","Header.js","AboutMe.js","ProjectThumbnail.js","Projects/2048.js","Projects/KneeExo.js","project-data.js","Projects.js","ContactMe.js","App.js","index.js"],"names":["MyLink","this","props","location","match","currentClass","history","pathname","to","className","exact","children","React","Component","withRouter","Header","href","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","style","fontWeight","AboutMe","backgroundColor","ProjectThumbnail","url","useRouteMatch","projectURL","src","imgPath","width","title","desc","timeline","skills","join","Agent2048","firstPicStyle","maxHeight","maxWidth","color","height","KneeExo","firstRowStyle","secRowStyle","secondPicStyle","secRowTextStyle","fourthRowTextStyle","projectInfo","projectPage","Projects","map","x","ContactMe","App","minHeight","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dbb79271.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link, NavLink, withRouter } from 'react-router-dom';\r\n\r\nclass MyLink extends React.Component {\r\n\trender() {\r\n\t\tconst { match, location, history } = this.props;\r\n\t\t\r\n\t\tconst currentClass = location.pathname === this.props.to ? 'nav-link active' : 'nav-link'\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<Link to={this.props.to}\r\n\t\t\t\tclassName={currentClass}\r\n\t\t\t\texact={this.props.exact}>\r\n\t\t\t\t\t{this.props.children}\r\n\t\t\t</Link>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default withRouter(MyLink);","import { Link, NavLink } from 'react-router-dom';\r\nimport MyLink from './MyLink.js';\r\n\r\nexport default function Header(props) {\r\n\t// const projectsActive = !!matchPath(props.location.name, \"/projects\");\r\n\t// const aboutActive = !!matchPath(props.location.name, \"/\");\r\n\t// const contactActive = !!matchPath(props.location.name, \"/contact\");\r\n\r\n\t// console.log(projectsActive);\r\n\t\r\n\tconst menuStyle = {\r\n\t\t'marginLeft': 'auto'\r\n\t};\r\n\r\n\treturn (\r\n\t\t<nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t<a className=\"navbar-brand fs-3\" href=\"/\">Srijan Duggal</a>\r\n\t\t\t\t<button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n\t\t\t\t\t<span className=\"navbar-toggler-icon\"></span>\r\n\t\t\t\t</button>\r\n\t\t\t\t<div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\" style={ { fontWeight: 'bold' }}>\r\n\t\t\t\t\t<ul className=\"nav navbar-nav\" style={menuStyle}>\r\n\t\t\t\t\t\t<MyLink to=\"/projects\">Projects</MyLink>\r\n\t\t\t\t\t\t<MyLink to=\"/\">About Me</MyLink>\r\n\t\t\t\t\t\t<MyLink to=\"/contact\">Contact Me</MyLink>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\t);\r\n}","export default function AboutMe(props) {\r\n\tconst pageStyle1 = {\r\n\t\tbackgroundColor: '#99B9CC'\r\n\t};\r\n\t\r\n\treturn (\r\n\t\t<div className=\"w-100\" style={pageStyle1}>\r\n\t\t\t<h3 className=\"pt-5 pb-5 text-center\">welcome</h3>\r\n\t\t\t<p className=\"m-auto text-center w-75 pb-5\">\r\n\t\t\t\tMy name is Srijan Duggal. I'm an avid learner and my mission is to help people\r\n\t\t\t\tthrough my creations (hardware and software). I'm a Mechanical Engineer by\r\n\t\t\t\ttraining, but my passion for learning has led me to proficiency in a variety\r\n\t\t\t\tof skillsets. Check out some of my cool projects!\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t);\r\n}","import { Link, useRouteMatch } from 'react-router-dom';\r\nimport './ProjectThumbnail.css';\r\n\r\nexport default function ProjectThumbnail(props) {\r\n\tconst { url } = useRouteMatch();\r\n\r\n\tconst picStyle = {\r\n\t\twidth: '100%'\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"col thumbcard\">\r\n\t\t\t<Link to={`${url}/${props.projectURL}`}>\r\n\t\t\t\t<img src={`thumbnails/${props.imgPath}`} style={picStyle}/>\r\n\t\t\t\t<div className=\"thumbtext\">\r\n\t\t\t\t\t<p className=\"text-center display-7 fs-4\">{props.title}</p>\r\n\t\t\t\t\t<p className=\"text-center\">{props.desc}</p>\r\n\t\t\t\t\t<p className=\"text-end fst-italic\">{props.timeline}</p>\r\n\t\t\t\t\t<p className=\"bottom-align-text skills fw-bold\">{props.skills.join(', ')}</p>\r\n\t\t\t\t</div>\r\n\t\t\t</Link>\r\n\t\t</div>\r\n\t);\r\n}","export default function Agent2048(props) {\r\n\tconst firstRowStyle = {\r\n\t\tbackgroundColor: '#f3b27a'\r\n\t};\r\n\r\n\tconst secRowStyle = {\r\n\t\tbackgroundColor: '#eee4da'\r\n\t};\r\n\r\n\tconst thirdRowStyle = {\r\n\t\tbackgroundColor: '#f77c5f'\r\n\t};\r\n\r\n\tconst fourthRowStyle = {\r\n\t\tbackgroundColor: '#eee1c9'\r\n\t};\r\n\r\n\tconst firstPicStyle = {\r\n\t\tmaxHeight: '60vh',\r\n\t\tmaxWidth: '100%'\r\n\t};\r\n\r\n\tconst firstRowTextStyle = {\r\n\t\tcolor: 'white'\r\n\t};\r\n\r\n\tconst secRowTextStyle = {\r\n\t\tcolor: '#786e66'\r\n\t};\r\n\r\n\tconst thirdPicStyle = {\r\n\t\theight: '80vh',\r\n\t\twidth: '100%'\r\n\t};\r\n\r\n\tconst thirdRowTextStyle = {\r\n\t\tcolor: 'white'\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<p className=\"text-center display-4 pt-2 pb-6\">2048 Playing Agent</p>\r\n\t\t\t<div className=\"w-100 container-fluid\">\r\n\t\t\t\t<div className=\"row\" style={firstRowStyle}>\r\n\t\t\t\t\t<div className=\"col-sm-3\">\r\n\t\t\t\t\t\t<img className=\"pt-4 pb-4 mx-auto d-block\" src=\"project-assets/2048/2048 Game.png\" style={firstPicStyle}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col text-center fs-4 fw-bold d-flex align-items-center\" style={firstRowTextStyle}>\r\n\t\t\t\t\t\t<p>I made a bot to play this online game called 2048.\r\n\t\t\t\t\t\tI had it choose actions based on two sets of rules: \r\n\t\t\t\t\t\tone that my friend and I came up with and one that it tried\r\n\t\t\t\t\t\tto learn using reinforcement learning.</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row\" style={secRowStyle}>\r\n\t\t\t\t\t<div className=\"col text-start fs-5 d-flex align-items-center pt-4\" style={secRowTextStyle}>\r\n\t\t\t\t\t\t<p>When I was in high school, I used to play this game.\r\n\t\t\t\t\t\tThe way it works is you have a tile area and the goal is\r\n\t\t\t\t\t\tto create a 2048 tile. You can press the left/right/up/down arrow keys,\r\n\t\t\t\t\t\tand when you do, each tile moves in the direction you pressed\r\n\t\t\t\t\t\tuntil it hits another tile. If it hits a tile of equal value,\r\n\t\t\t\t\t\tthen the two tiles combine and the value doubles: when a 2 tile\r\n\t\t\t\t\t\tand a 2 tile collide, they become a 4 tile. Every time you move,\r\n\t\t\t\t\t\ta 2 or 4 tile is randomly added to the board.\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-sm-4\" >\r\n\t\t\t\t\t\t<img className=\"pt-4 mx-auto pb-4 d-block\" src='https://thumbs.gfycat.com/ImpassionedShadyFlounder-small.gif' style={firstPicStyle}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row\" style={thirdRowStyle}>\r\n\t\t\t\t\t<div className=\"col-sm-6\">\r\n\t\t\t\t\t\t<iframe className=\"pt-4 mx-auto pb-4 d-block\"\r\n\t\t\t\t\t\t\t\tsrc='https://www.youtube.com/embed/H8oM8vUvROc'\r\n\t\t\t\t\t\t\t\tstyle={thirdPicStyle}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col text-start d-flex fs-5 align-items-center pt-4\" style={thirdRowTextStyle}>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\tThis was a common game amongst kids in my school, and after\r\n\t\t\t\t\t\tlearning about reinforcement learning during my Deep Learning class,\r\n\t\t\t\t\t\tI thought it would be fun to make a bot that could play. I started by\r\n\t\t\t\t\t\tusing <span className=\"fw-bold\">Selenium</span> and <span className=\"fw-bold\">Python</span> to scrape the game website, and to get the\r\n\t\t\t\t\t\tvalues of the tiles as well as the score. Once I had made a way to\r\n\t\t\t\t\t\tinteract with the website using Python functions, I started working on\r\n\t\t\t\t\t\ttwo agents. The first agent played the game according to a set of rules\r\n\t\t\t\t\t\tthat my friend and I created. The second agent played the game using a\r\n\t\t\t\t\t\tlearned policy (from Deep Reinforcement Learning). My friend and I played\r\n\t\t\t\t\t\tmany games and thought about what we would do in various situations to\r\n\t\t\t\t\t\tcome up with rules to beat it. Eventually we were able to come up with a\r\n\t\t\t\t\t\tpolicy that almost guaranteed winning, at least as frequently as we would\r\n\t\t\t\t\t\twin if we were playing (see video).\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row\" style={fourthRowStyle}>\r\n\t\t\t\t\t<div className=\"col text-start fs-5\">\r\n\t\t\t\t\t\t<p className=\"w-100 mx-auto pt-4\">\r\n\t\t\t\t\t\tFor the Reinforcement Learning agent, I used some\r\n\t\t\t\t\t\tconvolution layers and a feed-forward neural network. For the reward\r\n\t\t\t\t\t\tfunction, I used the score and tried training the agent. After training\r\n\t\t\t\t\t\tfor a while, it was able to do some moves that seemed like things my friend\r\n\t\t\t\t\t\tand I would do, but it lost well before reaching 2048. I didn’t have any\r\n\t\t\t\t\t\texperience in reinforcement learning at this time, so I wasn’t really\r\n\t\t\t\t\t\tsure how to move forward. Looking back on it now (I still haven’t\r\n\t\t\t\t\t\tgained any experience in reinforcement learning since then, but I\r\n\t\t\t\t\t\thave done more deep learning projects using convolutional neural\r\n\t\t\t\t\t\tnetworks), I think it needed more training time and potentially a\r\n\t\t\t\t\t\tdifferent reward function. While I did not finish training a\r\n\t\t\t\t\t\tsuccessful reinforcement learning agent, I was able to interact\r\n\t\t\t\t\t\twith the game website and use <span className=\"fw-bold\">PyTorch</span> in real-time to play it, which to\r\n\t\t\t\t\t\tme was a success. One day I would like to revisit this and finish\r\n\t\t\t\t\t\ttraining an agent that can win!\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row fs-5\">\r\n\t\t\t\t\t<div className=\"col text-center pt-4\">\r\n\t\t\t\t\t\t<p>The game can be found at <a href='https://play2048.co/'>https://play2048.co/</a></p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-sm-6 text-center pt-4 text-break\">\r\n\t\t\t\t\t\t<p>GIF credits: <a href='https://gfycat.com/impassionedshadyflounder'>https://gfycat.com/impassionedshadyflounder</a></p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<p></p>\r\n\t\t</div>\r\n\t);\r\n}","export default function KneeExo(props) {\r\n\tconst firstRowStyle = {\r\n\t\tbackgroundColor: 'white'\r\n\t};\r\n\r\n\tconst secRowStyle = {\r\n\t\tbackgroundColor: 'white'\r\n\t};\r\n\r\n\tconst thirdRowStyle = {\r\n\t\tbackgroundColor: '#717171'\r\n\t};\r\n\r\n\tconst fourthRowStyle = {\r\n\t\tbackgroundColor: '#eee1c9'\r\n\t};\r\n\r\n\tconst firstPicStyle = {\r\n\t\tmaxHeight: '60vh',\r\n\t\tmaxWidth: '100%'\r\n\t};\r\n\r\n\tconst secondPicStyle = {\r\n\t\tmaxHeight: '70vh',\r\n\t\tmaxWidth: '100%'\r\n\t};\r\n\r\n\tconst thirdPicStyle = {\r\n\t\tmaxHeight: '80vh',\r\n\t\tmaxWidth: '100%'\r\n\t};\r\n\r\n\tconst firstRowTextStyle = {\r\n\t\tcolor: 'grey'\r\n\t};\r\n\r\n\tconst secRowTextStyle = {\r\n\t\tcolor: 'black'\r\n\t};\r\n\r\n\t// const thirdPicStyle = {\r\n\t// \theight: '80vh',\r\n\t// \twidth: '100%'\r\n\t// };\r\n\r\n\tconst thirdRowTextStyle = {\r\n\t\tcolor: 'white'\r\n\t};\r\n\r\n\tconst fourthRowTextStyle = {\r\n\t\tcolor: 'black'\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<p className=\"text-center display-4 pt-2 pb-6\">Knee Exoskeleton Controller</p>\r\n\t\t\t<div className=\"w-100 container-fluid\">\r\n\t\t\t\t<div className=\"row\" style={firstRowStyle}>\r\n\t\t\t\t\t<div className=\"col-sm-3\">\r\n\t\t\t\t\t\t<img className=\"pt-4 pb-4 mx-auto d-block\" src=\"project-assets/Knee Exo/Knee Exo.jpg\" style={firstPicStyle}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col text-center fs-4 fw-bold d-flex align-items-center\" style={firstRowTextStyle}>\r\n\t\t\t\t\t\t<p>This project was part of my undergraduate research at the Exoskeleton\r\n\t\t\t\t\t\t\tand Prosthetics Intelligent Controls (EPIC) Lab with Dr. Aaron Young.\r\n\t\t\t\t\t\t\tI worked on it for two semesters with another undergrad student and\r\n\t\t\t\t\t\t\tlearned a lot about working with electronics and sensors for control.\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row\" style={secRowStyle}>\r\n\t\t\t\t\t<div className=\"col text-start fs-5 d-flex align-items-center pt-4\" style={secRowTextStyle}>\r\n\t\t\t\t\t\t<p>Some context: the EPIC lab has a focus on devices that humans wear to assist their motion. This project was based on assisting soldiers in walking long distances while carrying their heavy gear. The device was developed by Dr. Frank Hammond’s lab, and our two goals were to control how the device assists the user, and to make it user-friendly. I was excited for the opportunity to gain hands-on technical experience with a project of this scope.\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-sm-4\" >\r\n\t\t\t\t\t\t<img className=\"pt-4 mx-auto pb-4 d-block\" src='project-assets/Knee Exo/Epic Logo.jpg' style={firstPicStyle}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row\" style={secRowStyle}>\r\n\t\t\t\t\t<div className=\"col-sm-6\">\r\n\t\t\t\t\t\t<img className=\"pt-4 pb-4 mx-auto d-block\" src=\"project-assets/Knee Exo/Nextflex Device.png\" style={firstPicStyle}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col text-start d-flex fs-5 align-items-center pt-4\" style={secRowTextStyle}>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\tAt a high level, the device can produce a torque about the knee joint by expanding or contracting two pairs of pneumatic “muscles” (this is how it helps you walk). The device needs to know how much torque to assist you with at any time. We determined this by measuring the electrical activity of the user’s muscles (this is related to how much the muscle is about to contract) and commanding a torque proportional to this. To make the device user-friendly, we developed a control handle with buttons, switches, and LEDs to allow the user to change the mode that the device was operating in.\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row\" style={firstRowStyle}>\r\n\t\t\t\t\t<p className=\"pt-4 pb-4 text-center display-5\">User Interface</p>\r\n\t\t\t\t\t<div className=\"col text-start d-flex fs-5 align-items-center pt-4\" style={fourthRowTextStyle}>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\tThe user can control the device – turning the controller on, calibrating the controller, and setting the device to provide assistance – all using the simple handle with LED feedback. We designed a PCB for easy mounting of the electronics and a handle to house it.\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-sm-6 d-flex align-items-center\">\r\n\t\t\t\t\t\t<img className=\"pt-4 pb-4 mx-auto d-block\" src=\"project-assets/Knee Exo/Nextflex Handle.png\" style={firstPicStyle}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<p className=\"pt-4 pb-4 text-center display-5\">Hardware</p>\r\n\t\t\t\t\t<div className=\"col-sm-6 d-flex align-items-center\">\r\n\t\t\t\t\t\t<img className=\"pt-4 pb-4 mx-auto d-block\" src=\"project-assets/Knee Exo/Nextflex Hardware.png\" style={secondPicStyle}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col text-start d-flex fs-5 align-items-center pt-4\" style={fourthRowTextStyle}>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\tThe brain of the device is a Raspberry Pi microprocessor, which reads from two sensors: EMG and encoder. The encoder provides information on the angular position of the knee joint, and the EMG captures the muscle activity. The Raspberry Pi only takes digital inputs, so an Analog to Digital Converter (ADC) was necessary to read the EMG signals. The ADC had an SPI communication protocol output, so I learned about how to read this at a low-level and convert the digital pulses to the signal we desired. The digital encoder had a logic level of 5V, but the Raspberry Pi operates on a 3.3V logic level, so a level converter was necessary. The TI Launchpad was provided to us on the device itself, and it performed the low level pressure control in the muscles. We had to communicate with it using the UART protocol. \r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className='col-sm-5 d-flex align-items-center'>\r\n\t\t\t\t\t\t<img className=\"pt-4 pb-4 mx-auto d-block\" src=\"project-assets/Knee Exo/RPi Shield Schematic.png\" style={secondPicStyle}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='col-sm-4 d-flex align-items-center'>\r\n\t\t\t\t\t\t<img className=\"pt-4 pb-4 mx-auto d-block\" src=\"project-assets/Knee Exo/RPi Shield Layout.png\" style={secondPicStyle}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='col-sm-3 d-flex align-items-center'>\r\n\t\t\t\t\t\t<img className=\"pt-4 pb-4 mx-auto d-block\" src=\"project-assets/Knee Exo/RPi Shield Prototype.jpg\" style={secondPicStyle}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"mx-auto col-11 text-start d-flex fs-5 align-items-center pt-4\">\r\n\t\t\t\t\t\t<p>Once an initial circuit was functional on a breadboard, we designed a PCB shield to sit on top of the Raspberry Pi for a compact profile. The PCB was designed in Autodesk Eagle and then fabricated in The Hive makerspace at Georgia Tech. After we tested the PCB shield using a function generator/oscilloscope and then on the actual Raspberry Pi, we ordered a more professional board from OshPark. Finally, I designed a case for the Raspberry Pi and shield in SolidWorks and 3D printed it.\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className='col-sm-6 d-flex align-items-center'>\r\n\t\t\t\t\t\t<img className=\"pt-4 pb-4 mx-auto d-block\" src=\"project-assets/Knee Exo/RPi Shield.png\" style={secondPicStyle}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='col d-flex align-items-center'>\r\n\t\t\t\t\t\t<img className=\"pt-4 pb-4 mx-auto d-block\" src=\"project-assets/Knee Exo/RPi Shield and Case.jpg\" style={secondPicStyle}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<p className=\"pt-4 pb-4 text-center display-5\">Device Logic and Framework</p>\r\n\t\t\t\t\t<div className=\"mx-auto col-11 text-start d-flex fs-5 align-items-center pt-4\">\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\tThe logic for the different operating modes of the device (powered on, calibrating, calibrated, and assisting) and the controller was implemented on the Raspberry Pi using Python and ROS. This was my first exposure to ROS, and while I did not lead that aspect of the project, I learned about its purpose, capabilities, and how to use it. A diagram for the ROS nodes we used as well as a state transition diagram for the device are shown.\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<img className=\"pt-4 pb-4 mx-auto d-block\" src=\"project-assets/Knee Exo/State Machine.png\" style={secondPicStyle}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<img className=\"pt-4 pb-4 mx-auto d-block\" src=\"project-assets/Knee Exo/ROS Nodes.png\" style={thirdPicStyle}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<p className=\"pt-4 pb-4 text-center display-5\">Proportional Myoelectric Controller Implementation</p>\r\n\t\t\t\t\t<div className=\"col mx-auto col-11 text-start d-flex fs-5 align-items-center pt-4\">\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\tThe actual controller that determined the commanded assistance torque was a Proportional Myoelectric Controller, adapted from Koller et al[1]. The raw EMG signal is noisy and we wanted the torque profile to be proportional to the overall EMG profile. To create the EMG profile, at any clock cycle of the controller, the RMS of a backward-looking window of the EMG signal was calculated. This created a smooth time series with which we could command the device. The RMS EMG at each clock cycle was compared to the maximum RMS EMG value during the calibration phase to produce the desired torque output (See Equation 1). Essentially, the torque command is a fraction of the device’s maximum torque, and this fraction is determined by the current EMG signal.\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"mx-auto col-6\">\r\n\t\t\t\t\t\t<img className=\"pt-4 pb-4 mx-auto d-block\" src=\"project-assets/Knee Exo/Controller Eqn.png\" style={firstPicStyle}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col mx-auto col-11 text-start d-flex fs-5 align-items-center pt-4\">\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\tA time series example of what this looks like is shown. This was from an offline computation of the output torque, but the real-time result is the same.\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<img className=\"pt-4 pb-4 mx-auto d-block\" src=\"project-assets/Knee Exo/Controller Offline.png\" style={secondPicStyle}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col mx-auto text-start d-flex fs-5 align-items-center pt-4\">\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\tWhen the EMG signal is flat, the user’s muscles are in a resting state, however there are still slight torque output values. It is undesirable for the device to be attempting to assist at an almost negligible torque, so during the calibration phase, a threshold RMS EMG level is also calculated.\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<p className=\"pt-4 pb-4 text-center display-5\">Calibration</p>\r\n\t\t\t\t\t<div className=\"col mx-auto col-11 text-start d-flex fs-5 align-items-center pt-4\">\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\tThe purpose of the calibration phase is to calculate two quantities: the threshold RMS EMG level, and the maximum RMS EMG level. After the user presses the calibration button, they must walk for a short period of time during which the device is recording the device data. This is where the knee encoder is used. We used the fact that walking is a periodic motion to detect a fixed number of gait cycles before computing the two quantities. The encoder signal has some drift, but we found that a peak detection function from the scipy library was sufficient to detect local minima in the series. Once 7 gait cycles had passed, we computed the RMS EMG profile and calculated the maximum (for use in the torque command equation) and the 10th percentile (for use as a threshold to eliminate noise when the muscle is resting).\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<img className=\"pt-4 pb-4 mx-auto d-block\" src=\"project-assets/Knee Exo/Encoder vs Time.png\" style={firstPicStyle}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<img className=\"pt-4 pb-4 mx-auto d-block\" src=\"project-assets/Knee Exo/Threshold Ex.png\" style={firstPicStyle}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"row fs-5\">\r\n\t\t\t\t\t<div className=\"col text-center pt-4\">\r\n\t\t\t\t\t\t<p>1. Koller, J.R., Jacobs, D.A., Ferris, D.P. et al. Learning to walk with an adaptive gain proportional myoelectric controller for a robotic ankle exoskeleton. J NeuroEngineering Rehabil 12, 97 (2015). https://doi.org/10.1186/s12984-015-0086-5</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<p></p>\r\n\t\t</div>\r\n\t);\r\n}","import Game2048 from './Projects/2048.js';\r\nimport KneeExo from './Projects/KneeExo.js';\r\n\r\n//Props for ProjectThumbnail\r\nexport const projectInfo = [\r\n\t{\r\n\t\timgPath: '2048 Game.png',\r\n\t\ttitle: '2048 Playing Agent',\r\n\t\tdesc: 'Bot that plays 2048 using human-based logic & reinforcement learning',\r\n\t\ttimeline: 'June-July 2020',\r\n\t\tskills: ['web scraping', 'reinforcement learning'],\r\n\t\tprojectURL: '2048Agent',\r\n\t\tprojectPage: <Game2048 />\r\n\t},\r\n\t{\r\n\t\timgPath: 'Knee Exo.jpg',\r\n\t\ttitle: 'Knee Exoskeleton Controller',\r\n\t\tdesc: 'Implemented hardware/software for pneumatic knee exoskeleton control',\r\n\t\ttimeline: 'Jan-Dec 2020',\r\n\t\tskills: ['microcontrollers', 'PCB design', 'ROS'],\r\n\t\tprojectURL: 'knee-exo',\r\n\t\tprojectPage: <KneeExo />\r\n\t},\r\n\t{\r\n\t\timgPath: '2048 Game.png',\r\n\t\ttitle: '2048 Playing Agent',\r\n\t\tdesc: 'Bot that plays 2048: human-based logic and reinforcement learning',\r\n\t\ttimeline: 'May-June 2019',\r\n\t\tskills: ['web scraping', 'reinforcement learning'],\r\n\t\tprojectURL: '2048Agent',\r\n\t\tprojectPage: <Game2048 />\r\n\t},\r\n\t{\r\n\t\timgPath: '2048 Game.png',\r\n\t\ttitle: '2048 Playing Agent',\r\n\t\tdesc: 'Bot that plays 2048: human-based logic and reinforcement learning',\r\n\t\ttimeline: 'May-June 2019',\r\n\t\tskills: ['web scraping', 'reinforcement learning'],\r\n\t\tprojectURL: '2048Agent',\r\n\t\tprojectPage: <Game2048 />\r\n\t}\r\n];","import ProjectThumbnail from './ProjectThumbnail.js';\r\nimport { projectInfo } from './project-data.js';\r\n\r\nexport default function Projects(props) {\r\n\treturn (\r\n\t\t<div className=\"container-md\">\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t{projectInfo.map(x => <ProjectThumbnail {...x}/>)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t);\r\n}","export default function ContactMe(props) {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<p>Let's get in touch</p>\r\n\t\t</div>\r\n\t);\r\n}","import {\n\tHashRouter as Router,\n\tSwitch,\n\tRoute\n} from \"react-router-dom\";\nimport './App.css';\nimport Header from './Header.js';\nimport AboutMe from './AboutMe.js';\nimport Projects from './Projects.js';\nimport ContactMe from './ContactMe.js';\nimport { projectInfo } from './project-data.js';\n\nfunction App() {\n\tconst pageStyle = {\n\t\tminHeight: '100vh'\n\t};\n\n\treturn (\n\t\t<Router>\n\t\t\t<div style = {pageStyle}>\n\t\t\t\t<Header />\n\t\t\t\t<Switch>\n\t\t\t\t\t{projectInfo.map(x => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Route path={`/projects/${x.projectURL}`}>\n\t\t\t\t\t\t\t\t{x.projectPage}\n\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\n\t\t\t\t\t<Route path=\"/projects\">\n\t\t\t\t\t\t<Projects />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/contact\">\n\t\t\t\t\t\t<ContactMe />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t<AboutMe />\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);"],"sourceRoot":""}